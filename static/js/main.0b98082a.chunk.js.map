{"version":3,"sources":["Components/MapContainer/MapContainer.js","Utils/Points.js","Components/PointInput/PointInput.js","Components/PointList/PointList.js","Components/ScreenToggler/ScreenToggler.js","LocationPoint/LocationPoint.js","App.js","Utils/Array.js","index.js"],"names":["modules","mapDefaults","center","zoom","MapContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","container","React","createRef","ymaps","state","loaded","handleLoad","bind","assertThisInitialized","handleRouteRequestSuccess","updateMapCenter","prevProps","_this2","locations","updateRoute","length","initialRoute","model","events","once","wayPoints","getWayPoints","lastWayPoint","get","getLength","geometry","getCoordinates","coords","map","setCenter","duration","addressList","location","value","setReferencePoints","e","diff","toArray","locationPoints","routeWayPoints","slice","_loop2","i","locPoint","wayPointHasMatchIndex","findIndex","wayPoint","wayPointCoords","properties","comparePoints","point","v","index","address","request","splice","_loop","_ret","diffPoints","console","group","count","log","groupEnd","updateLocationPoint","onWayPointDrag","forEach","geoObject","addon","balloon","_this3","multiRouter","MultiRoute","referencePoints","loc","params","results","wayPointDraggable","preventDragUpdate","routeStrokeColor","routeActiveStrokeColor","routeOpacity","routeOpenBalloonOnClick","wayPointBalloonContentLayout","templateLayoutFactory","createClass","routeOptions","add","event","setState","geoObjects","_this4","_this$props$className","className","loadingModifier","react_default","a","createElement","concat","react_yandex_maps_umd_production_min","defaultState","onLoad","instanceRef","ref","Component","PointInput","handleChange","handleSubmit","target","onSubmit","preventDefault","type","onChange","placeholder","PointList","_React$Component","apply","arguments","inherits","key","_this$props","onDelete","_this$props2","provided","innerRef","droppableProps","items","children","PointList_PointListItem","id","assign","DraggablePointList","onDragEnd","rest","objectWithoutProperties","react_beautiful_dnd_esm","result","destination","sourceIndex","source","destIndex","droppableId","PointList_PointList_PointList","DraggablePointListItem","PointListItem","_React$Component2","_this$props3","_this$props4","_ref2","draggableProps","dragHandleProps","onClick","draggableId","ScreenToggler","label","handleToggle","initialLabel","onToggle","toggledLabel","makeLocationPointFactory","undefined","Error","locationPoint","addLocationPoint","update","Array","isArray","locs","viewList","shouldBeHidden","view","activeView","App","_Component","createLocationPoint","toggleView","deleteLocationPoint","moveLocationPoint","requestValue","geocode","fetch","then","response","coordinates","getAddressLine","_addLocationPoint2","asyncToGenerator","regenerator_default","mark","_callee","updateState","wrap","_context","prev","next","fetchPointCoords","sent","abrupt","Promise","resolve","reject","stop","_x","filter","from","to","fromPosition","toPosition","extractedPoint","_updateLocationPoint2","_callee2","_context2","test","fetchPointAddress","_x2","_x3","PointInput_PointInput_PointInput","MapContainer_MapContainer_MapContainer","ScreenToggler_ScreenToggler_ScreenToggler","withYMaps","ReactDOM","render","query","apikey","src_App_0","document","getElementById"],"mappings":"yPAOA,IAAMA,EAAU,CACd,yBACA,UACA,0BACA,yBAGIC,EAAc,CAAEC,OAAQ,CAAC,MAAO,OAAQC,KAAM,IAe/BC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,UAAYC,IAAMC,YACvBT,EAAKU,MAAQ,KAEbV,EAAKW,MAAQ,CACXC,QAAQ,GAGVZ,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAKgB,0BAA4BhB,EAAKgB,0BAA0BF,KAA/Bb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAEjCA,EAAKiB,gBAAkBjB,EAAKiB,gBAAgBH,KAArBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAbNA,kFAgBAkB,GAAW,IAAAC,EAAAhB,KAC5B,GAAKA,KAAKO,MAAV,CAD4B,IAGpBU,EAAcjB,KAAKJ,MAAnBqB,UAWRjB,KAAKkB,YAAYD,GAEbA,EAAUE,OAASJ,EAAUE,UAAUE,QAEzCnB,KAAKoB,aAAaC,MAAMC,OAAOC,KAAK,iBAAkB,WACpD,IAAMC,EAAYR,EAAKI,aAAaK,eAC9BC,EAAeF,EAAUG,IAAIH,EAAUI,YAAc,GAE3DZ,EAAKF,gBAAgBY,EAAaG,SAASC,6DAKjCC,GACd/B,KAAKgC,IAAIC,UAAUF,EAAQvC,EAAYE,KAAM,CAC3CwC,SAAU,0CAIFjB,GACV,IAAMkB,EAAclB,EAAUe,IAAI,SAACI,GAAD,OAEL,IAA3BA,EAASL,OAAOZ,OAAeiB,EAASL,OAASK,EAASC,QAE5DrC,KAAKoB,aAAaC,MAAMiB,mBAAmBH,qDAGnB5B,EAAOgC,GAC/B,IAGIC,EAHEhB,EAAYxB,KAAKoB,aAAaK,eAAegB,UAC3CxB,EAAcjB,KAAKJ,MAAnBqB,WAOJO,EAAUL,SAAWF,EAAUE,SACjCqB,ECtDC,SAAoBE,EAAgBC,GACzC,IAAMnB,EAAYmB,EAAeC,MAAM,GADkBC,EAAA,SAGhDC,GACP,IAAMC,EAAWL,EAAeI,GAE1BE,EAAwBxB,EAAUyB,UAAU,SAACC,GAAD,OArCtD,SAAuBH,EAAUG,GAG/B,GAA+B,IAA3BH,EAAShB,OAAOZ,OAAc,CAChC,IAAMgC,EAAiBD,EAASrB,SAASC,iBACzC,OACEiB,EAAShB,OAAO,KAAOoB,EAAe,IACtCJ,EAAShB,OAAO,KAAOoB,EAAe,GAI1C,OAAOJ,EAASV,QAAUa,EAASE,WAAWzB,IAAI,WA2B9C0B,CAAcN,EAAUG,KAM1B,IAA+B,IAA3BF,GAAqD,IAArBxB,EAAUL,OAAc,CAC1D,IAAMmC,EAAQ9B,EAAU,GAIxB,OAAA+B,EAAO,CACLC,MAAOV,EACPf,OALgBuB,EAAMzB,SAASC,iBAM/B2B,QAASH,EAAMF,WAAWzB,IAAI,WAC9B+B,QAASJ,EAAMF,WAAWzB,IAAI,aAIhC,GAAyB,IAArBH,EAAUL,OAAc,cAI5BK,EAAUmC,OAAOX,EAAuB,IA9BaY,EAGzD,IAAK,IAAId,EAAI,EAAGA,EAAIJ,EAAevB,OAAQ2B,IAAK,KAAAe,EAAAhB,EAAvCC,GAAuC,OAAAe,GAAA,YAuBhB,MAAAD,EAvBgB,6BAAAC,EAAA,OAAAA,EAAAN,GA+BhD,OAAO,KDoBIO,CAAW9D,KAAKJ,MAAMqB,UAAWO,EAAUoB,MAAM,KAIxDmB,QAAQC,MAAM,yBACdD,QAAQE,MAAM,yBACdF,QAAQG,IAAI,2BAA6B3B,EAAEZ,IAAI,SAC/CoC,QAAQG,IAAI1C,GACZuC,QAAQG,IAAI1B,GACZuB,QAAQI,SAAS,yBAMf3B,KAEF4B,EADgDpE,KAAKJ,MAA7CyE,gBACY7B,EAAKgB,MAAO,CAAEzB,OAAQS,EAAKT,SAWjDP,EAAU8C,QAAQ,SAACpB,GACjB3C,EAAMgE,UAAUC,MAAMC,QAAQ9C,IAAIuB,wCAI3B3C,GAAO,IAAAmE,EAAA1E,KAChBA,KAAKO,MAAQA,EADG,IAERU,EAAcjB,KAAKJ,MAAnBqB,UAERjB,KAAKoB,aAAe,IAAIb,EAAMoE,YAAYC,WAAW,CACnDC,gBAAiB5D,EAAUe,IAAI,SAAC8C,GAAD,OAASA,EAAIzC,QAC5C0C,OAAQ,CAENC,QAAS,IA3HI,SAACzE,GAAD,MAAY,CAC/B0E,mBAAmB,EACnBC,mBAAmB,EAEnBC,iBAAkB,UAClBC,uBAAwB,UACxBC,aAAc,EAEdC,yBAAyB,EACzBC,6BAA8BhF,EAAMiF,sBAAsBC,YACxD,iCAoHIC,CAAanF,IAEjBP,KAAKoB,aAAaC,MAAMC,OAAOqE,IAAI,iBAAkB,SAACC,GACpDlB,EAAK7D,0BAA0BN,EAAOqF,KAIxC5F,KAAK6F,SAAS,CAAEpF,QAAQ,IACxBT,KAAKgC,IAAI8D,WAAWH,IAAI3F,KAAKoB,+CAGtB,IAAA2E,EAAA/F,KAAAgG,EACoBhG,KAAKJ,MAAxBqG,iBADD,IAAAD,EACa,GADbA,EAEDE,EACHlG,KAAKQ,MAAMC,OAAS,GAAK,8BAE5B,OACE0F,EAAAC,EAAAC,cAAA,OACEJ,UAAS,mEAAAK,OAGLL,EAHK,gBAAAK,OAILJ,EAJK,sFASTC,EAAAC,EAAAC,cAACE,EAAA,IAAD,CACEN,UAAU,MACV1G,QAASA,EACTiH,aAAchH,EACdiH,OAAQzG,KAAKU,WACbgG,YAAa,SAAAC,GAAG,OAAKZ,EAAK/D,IAAM2E,aAhJAC,aEzBrBC,qBACnB,SAAAA,EAAYjH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACjBhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KAAMJ,KAEDY,MAAQ,CACX6B,MAAO,IAGTxC,EAAKiH,aAAejH,EAAKiH,aAAanG,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAKkH,aAAelH,EAAKkH,aAAapG,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KARHA,4EAWN0C,GACXvC,KAAK6F,SAAS,CAAExD,MAAOE,EAAEyE,OAAO3E,6CAGrBE,GAAG,IACNF,EAAUrC,KAAKQ,MAAf6B,MACRrC,KAAKJ,MAAMqH,SAAS5E,GACpBrC,KAAK6F,SAAS,CAAExD,MAAO,KACvBE,EAAE2E,kDAIF,OACEf,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,WAAWgB,SAAUjH,KAAK+G,cACxCZ,EAAAC,EAAAC,cAAA,SAAOJ,UAAU,aAAakB,KAAK,OAAO9E,MAAOrC,KAAKQ,MAAM6B,MAAO+E,SAAUpH,KAAK8G,aAAcO,YAAY,yFA1B5ET,sCCG3BU,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,GAAAxH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAE,MAAAxH,KAAAyH,YAAA,OAAA3H,OAAA4H,EAAA,EAAA5H,CAAAwH,EAAAC,GAAAzH,OAAA2F,EAAA,EAAA3F,CAAAwH,EAAA,EAAAK,IAAA,SAAAtF,MAAA,WACW,IAAAuF,EACyB5H,KAAKJ,MAA7BqB,EADD2G,EACC3G,UAAW4G,EADZD,EACYC,SADZC,EAGuB9H,KAAKJ,MAA3BmI,EAHDD,EAGCC,SAAUC,EAHXF,EAGWE,SACVC,GAAoBF,GAAY,IAAhCE,eAEFC,EAAQlI,KAAKJ,MAAMuI,UACvBlH,EAAUe,IAAI,SAACI,GAAD,OACZ+D,EAAAC,EAAAC,cAAC+B,EAAD,CACEhG,SAAUA,EACVyF,SAAUA,EACVF,IAAKvF,EAASiG,OAIpB,OACElC,EAAAC,EAAAC,cAAA,KAAAvG,OAAAwI,OAAA,CACErC,UAAU,0BACVU,IAAKqB,GACAC,GAEJC,OAtBTZ,EAAA,CAA+BjH,IAAMuG,WA4B9B,SAAS2B,EAAmB3I,GAAO,IAChC4I,EAAuB5I,EAAvB4I,UAAcC,EADkB3I,OAAA4I,EAAA,EAAA5I,CACTF,EADS,eAcxC,OACEuG,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAiBH,UAZG,SAACI,GACrB,GAAKA,EAAOC,YAAZ,CAIA,IAAMC,EAAcF,EAAOG,OAAOvF,MAC5BwF,EAAYJ,EAAOC,YAAYrF,MAErCgF,EAAUM,EAAaE,MAKrB7C,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWM,YAAY,eACpB,SAAAlB,GAAQ,OACP5B,EAAAC,EAAAC,cAAC6C,EAAD,CACEnB,SAAUA,EACVC,SAAUD,EAASC,UAElBS,EAAKxH,UAAUe,IAAI,SAACI,EAAUoB,GAAX,OAClB2C,EAAAC,EAAAC,cAAC8C,EAAD,CAEEd,GAAIjG,EAASiG,GACb7E,MAAOA,EAEPpB,SAAUA,EACVyF,SAAUY,EAAKZ,SACfF,IAAKvF,EAASiG,OAGjBN,EAASV,gBAQf,IAAM+B,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAtJ,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,GAAAtJ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAA5B,MAAAxH,KAAAyH,YAAA,OAAA3H,OAAA4H,EAAA,EAAA5H,CAAAsJ,EAAAC,GAAAvJ,OAAA2F,EAAA,EAAA3F,CAAAsJ,EAAA,EAAAzB,IAAA,SAAAtF,MAAA,WACW,IAAAiH,EACwBtJ,KAAKJ,MAA5BwC,EADDkH,EACClH,SAAUyF,EADXyB,EACWzB,SADX0B,EAEwBvJ,KAAKJ,MAA5BmI,EAFDwB,EAECxB,SAAUC,EAFXuB,EAEWvB,SAFXwB,EAIsCzB,GAAY,GAAjD0B,EAJDD,EAICC,eAAgBC,EAJjBF,EAIiBE,gBAExB,OACEvD,EAAAC,EAAAC,cAAA,KAAAvG,OAAAwI,OAAA,CACErC,UAAU,uBACNwD,EAFN,CAGE9C,IAAKqB,IAEL7B,EAAAC,EAAAC,cAAA,MAAAvG,OAAAwI,OAAA,CACErC,UAAU,aACNyD,IAENvD,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAiB7D,EAASC,OACzC8D,EAAAC,EAAAC,cAAA,UACEJ,UAAU,wCACV0D,QAAS,kBAAM9B,EAASzF,EAASiG,YApB3Ce,EAAA,CAAmC/I,IAAMuG,WA2BzC,SAASuC,EAAuBvJ,GAAO,IAC3ByI,EAAuBzI,EAAvByI,GAAI7E,EAAmB5D,EAAnB4D,MAAUiF,EADa3I,OAAA4I,EAAA,EAAA5I,CACJF,EADI,gBAGnC,OACEuG,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWiB,YAAavB,EAAI7E,MAAOA,GAChC,SAACuE,GAAD,OACC5B,EAAAC,EAAAC,cAAC+B,EAADtI,OAAAwI,OAAA,CAAeP,SAAUA,EAAUV,YAAaU,EAASV,YAAaW,SAAUD,EAASC,UAAcS,iBCzGpGoB,EAAb,SAAAtC,GACE,SAAAsC,EAAYjK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,IACjBhK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+J,GAAA1J,KAAAH,KAAMJ,KAEDY,MAAQ,CACXsJ,MAAO,IAGTjK,EAAKkK,aAAelK,EAAKkK,aAAapJ,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAPHA,EADrB,OAAAC,OAAA4H,EAAA,EAAA5H,CAAA+J,EAAAtC,GAAAzH,OAAA2F,EAAA,EAAA3F,CAAA+J,EAAA,EAAAlC,IAAA,oBAAAtF,MAAA,WAWsB,IACIyH,EAAU9J,KAAKJ,MAA7BoK,aAERhK,KAAK6F,SAAS,SAACrF,GAAD,MAAY,CAAEsJ,aAdhC,CAAAnC,IAAA,eAAAtF,MAAA,WAiBiB,IAAAuF,EACoC5H,KAAKJ,MAA9CqK,EADKrC,EACLqC,SAAUD,EADLpC,EACKoC,aAAcE,EADnBtC,EACmBsC,aAEhClK,KAAK6F,SAAS,SAACrF,GAAD,MAAY,CACxBsJ,MAAOtJ,EAAMsJ,QAAUE,EAAeE,EAAeF,KAGvDC,MAxBJ,CAAAtC,IAAA,SAAAtF,MAAA,WA2BW,IACCyH,EAAU9J,KAAKQ,MAAfsJ,MAER,OACE3D,EAAAC,EAAAC,cAAA,UACEJ,UAAU,kCACV0D,QAAS3J,KAAK+J,cAEbD,OAnCTD,EAAA,CAAmCxJ,IAAMuG,WCS5BuD,EAA4B,WAAmB,IACtD9B,EADsDZ,UAAAtG,OAAA,QAAAiJ,IAAA3C,UAAA,GAAAA,UAAA,GAAN,EAWpD,OAAO,SAA6BhE,GAAsB,IAAb1B,EAAa0F,UAAAtG,OAAA,QAAAiJ,IAAA3C,UAAA,GAAAA,UAAA,GAAJ,GACpD,QAAgB2C,IAAZ3G,EACF,MAAM,IAAI4G,MAAM,8EAGlB,IAAMC,EAAgB,CACpBjC,KACAtG,SACAM,MAAOoB,GAKT,OAFA4E,GAAU,EAEHiC,IAYJ,SAASC,EAAiBtJ,EAAWqJ,GAC1C,QAA4BF,IAAxBE,EAAcjI,YAA4C+H,IAArBE,EAAcjC,GACrD,MAAM,IAAIgC,MAAM,gFAGlB,OAAOpJ,EAAUqF,OAAO,CAACgE,IAuEpB,SAASlG,EAAoBnD,EAAWuC,EAAOgH,GACpD,GAAIhH,EAAQ,GAAKA,GAASvC,EAAUE,OAClC,MAAM,IAAIkJ,MAAJ,+EAGR,GAAsB,kBAAXG,EACT,MAAM,IAAIH,MAAM,oEAGlB,GAAIG,IAAYC,MAAMC,QAAQF,EAAOzI,UAAYyI,EAAOnI,MACtD,MAAM,IAAIgI,MAAM,iJAElB,IAAMM,EAAO1J,EAAU2B,MAAM,GAI7B,OAFA+H,EAAKnH,GAAS1D,OAAOwI,OAAO,GAAIqC,EAAKnH,GAAQgH,GAEtCG,EC3HF,IAAMC,EAAW,CAAC,gBAAiB,oBACpCC,EAAiB,SAACC,EAAMC,GAAP,OACrBD,IAASC,EAAa,YAAc,IAGzBC,EAAb,SAAAC,GACE,SAAAD,EAAYpL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgL,IACjBnL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkL,GAAA7K,KAAAH,KAAMJ,KAEDY,MAAQ,CACXS,UAAW,GACX8J,WAAYH,EAAS,IAGvB/K,EAAKqL,oBAAsBf,IAE3BtK,EAAKsL,WAAatL,EAAKsL,WAAWxK,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAK0K,iBAAmB1K,EAAK0K,iBAAiB5J,KAAtBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACxBA,EAAKuL,oBAAsBvL,EAAKuL,oBAAoBzK,KAAzBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAC3BA,EAAKwL,kBAAoBxL,EAAKwL,kBAAkB1K,KAAvBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACzBA,EAAKuE,oBAAsBvE,EAAKuE,oBAAoBzD,KAAzBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAdVA,EADrB,OAAAC,OAAA4H,EAAA,EAAA5H,CAAAkL,EAAAC,GAAAnL,OAAA2F,EAAA,EAAA3F,CAAAkL,EAAA,EAAArD,IAAA,QAAAtF,MAAA,SAkBQiJ,GAEJ,OAAOC,EADavL,KAAKJ,MAAMW,MAAvBgL,SACOD,EAAc,CAAEtG,QAAS,MApB5C,CAAA2C,IAAA,mBAAAtF,MAAA,SAuBmBoB,GACf,OAAOzD,KAAKwL,MAAM/H,GAASgI,KAAK,SAAAC,GAAQ,OACtCA,EAAS5F,WAAWnE,IAAI,GAAGE,SAASC,qBAzB1C,CAAA6F,IAAA,oBAAAtF,MAAA,SA6BoBsJ,GAChB,OAAO3L,KAAKwL,MAAMG,GAAaF,KAAK,SAAAC,GAAQ,OAC1CA,EAAS5F,WAAWnE,IAAI,GAAGiK,qBA/BjC,CAAAjE,IAAA,aAAAtF,MAAA,WAwCIrC,KAAK6F,SAAS,SAACrF,GAAD,MAAY,CACxBuK,YALgBD,EAKKtK,EAAMuK,WAJ3BD,IAASF,EAAS,GAAKA,EAAS,GAAKA,EAAS,KAD/B,IAACE,MApCtB,CAAAnD,IAAA,mBAAAtF,MAAA,eAAAwJ,EAAA/L,OAAAgM,EAAA,EAAAhM,CAAAiM,EAAA3F,EAAA4F,KAAA,SAAAC,EA6CyB5J,GA7CzB,IAAAN,EAAAuI,EAAA4B,EAAAlL,EAAAhB,KAAA,OAAA+L,EAAA3F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA8CyBtM,KAAKuM,iBAAiBlK,GA9C/C,cA8CUN,EA9CVqK,EAAAI,KA+CUlC,EAAgBtK,KAAKkL,oBAAoB7I,EAAON,GAEhDmK,EAAc,SAAC1L,GAAD,MAAY,CAC9BS,UAAWsJ,EAAiB/J,EAAMS,UAAWqJ,KAlDnD8B,EAAAK,OAAA,SAqDW,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IACE5L,EAAK6E,SAASqG,EAAa,WACzBS,EAAQrC,KAEV,MAAO/H,GACPqK,EAAOrK,OA3Df,wBAAA6J,EAAAS,SAAAZ,EAAAjM,SAAA,gBAAA8M,GAAA,OAAAjB,EAAArE,MAAAxH,KAAAyH,YAAA,KAAAE,IAAA,sBAAAtF,MAAA,SAgEsBgG,GAClBrI,KAAK6F,SAAS,SAACrF,GAAD,MAAY,CACxBS,UDvBC,SAA6BA,EAAWoH,GAC7C,QAAW+B,IAAP/B,EACF,MAAM,IAAIgC,MAAM,iGAGlB,OAAOpJ,EAAU8L,OAAO,SAAC3K,GACvB,OAAOA,EAASiG,KAAOA,ICiBV+C,CAAoB5K,EAAMS,UAAWoH,QAlEtD,CAAAV,IAAA,oBAAAtF,MAAA,SAsEoB2K,EAAMC,GACtBjN,KAAK6F,SAAS,SAACrF,GAAD,MAAY,CACxBS,UDPC,SAA2BA,EAAWiM,EAAcC,GAEzD,GAAID,EAAe,GAAKA,GAAgBjM,EAAUE,OAChD,MAAM,IAAIkJ,MAAM,wFAGlB,GAAI8C,EAAa,GAAKA,GAAclM,EAAUE,OAC5C,MAAM,IAAIkJ,MAAM,sFAGlB,IAAMM,EAAO1J,EAAU2B,MAAM,GACvBwK,EAAiBzC,EAAKhH,OAAOuJ,EAAc,GAAG,GAEpD,OADAvC,EAAKhH,OAAOwJ,EAAY,EAAGC,GACpBzC,ECNQU,CAAkB7K,EAAMS,UAAW+L,EAAMC,QAxE1D,CAAAtF,IAAA,sBAAAtF,MAAA,eAAAgL,EAAAvN,OAAAgM,EAAA,EAAAhM,CAAAiM,EAAA3F,EAAA4F,KAAA,SAAAsB,EA4E4B9J,EAAOgH,GA5EnC,IAAA0B,EAAAxH,EAAA1E,KAAA,OAAA+L,EAAA3F,EAAA+F,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UA6EUJ,EAAc,SAAC1L,GAAD,MAAY,CAC9BS,UAAWmD,EAAoB5D,EAAMS,UAAWuC,EAAOgH,KC7F/BgD,EDgGRhD,EAAOzI,QC/FpB0I,MAAMC,QAAQ8C,IAAyB,IAAhBA,EAAKrM,ODcrC,CAAAoM,EAAAjB,KAAA,eAAAiB,EAAAjB,KAAA,EAmF2BtM,KAAKyN,kBAAkBjD,EAAOzI,QAnFzD,OAmFMyI,EAAOnI,MAnFbkL,EAAAf,KAAAe,EAAAjB,KAAA,oBAoFe9B,EAAOnI,MApFtB,CAAAkL,EAAAjB,KAAA,gBAAAiB,EAAAjB,KAAA,GAsF4BtM,KAAKuM,iBAAiB/B,EAAOnI,OAtFzD,QAsFMmI,EAAOzI,OAtFbwL,EAAAf,KAAA,eAAAe,EAAAd,OAAA,SA2FW,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IACElI,EAAKmB,SAASqG,EAAa,WACzBS,EAAQnC,KAEV,MAAOjI,GACPqK,EAAOrK,OAjGf,yBAAAgL,EAAAV,OCfO,IAAuBW,GDe9BF,EAAAtN,SAAA,gBAAA0N,EAAAC,GAAA,OAAAN,EAAA7F,MAAAxH,KAAAyH,YAAA,KAAAE,IAAA,SAAAtF,MAAA,WAsGW,IACC0I,EAAe/K,KAAKQ,MAApBuK,WAER,OACE5E,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,OACdE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,wEAKbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAS,4CAAAK,OAEVuE,EAAeD,EAAS,GAAIG,GAFlB,iBAIZ5E,EAAAC,EAAAC,cAACuH,EAAD,CAAY3G,SAAUjH,KAAKuK,mBAC3BpE,EAAAC,EAAAC,cAACkC,EAAD,CACEC,UAAWxI,KAAKqL,kBAChBxD,SAAU7H,KAAKoL,oBACfnK,UAAWjB,KAAKQ,MAAMS,aAE1BkF,EAAAC,EAAAC,cAACwH,EAAD,CACE5H,UAAW4E,EAAeD,EAAS,GAAIG,GACvC9J,UAAWjB,KAAKQ,MAAMS,UACtBoD,eAAgBrE,KAAKoE,uBAGzB+B,EAAAC,EAAAC,cAACyH,EAAD,CACE7D,SAAUjK,KAAKmL,WACfnB,aAAa,kFACbE,aAAa,8HAnIvBc,EAAA,CAAyBpE,aA0IVmH,sBAAU/C,GAAK,EAAM,CAAC,YEvJrCgD,IAASC,OACP9H,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAO2H,MAAO,CAAEC,OAHH,yCAIXhI,EAAAC,EAAAC,cAAC+H,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.0b98082a.chunk.js","sourcesContent":["import './MapContainer.css';\n\nimport React, { Component } from 'react';\nimport { Map } from 'react-yandex-maps';\n\nimport { diffPoints } from 'Utils/Points.js';\n\nconst modules = [\n  'multiRouter.MultiRoute',\n  'geocode',\n  'geoObject.addon.balloon',\n  'templateLayoutFactory',\n];\n\nconst mapDefaults = { center: [55.75, 37.57], zoom: 12 };\nconst routeOptions = (ymaps) => ({\n  wayPointDraggable: true,\n  preventDragUpdate: true,\n  // Force route to keep the same color even when being inactive\n  routeStrokeColor: '#a051cf',\n  routeActiveStrokeColor: '#a051cf',\n  routeOpacity: 1,\n  // Stop opening balloon on route click (wayPoints handled separately)\n  routeOpenBalloonOnClick: false, \n  wayPointBalloonContentLayout: ymaps.templateLayoutFactory.createClass(\n    '{{ properties.address|raw }}'\n  ),\n});\n\nexport default class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.container = React.createRef();\n    this.ymaps = null;\n\n    this.state = {\n      loaded: false,\n    };\n\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleRouteRequestSuccess = this.handleRouteRequestSuccess.bind(this);\n\n    this.updateMapCenter = this.updateMapCenter.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.ymaps) { return; }\n\n    const { locations } = this.props;\n\n    /**\n     * Note: Does not work as moveLocationPoint (drag&drop) is not considered\n      const wayPointsArray = this.initialRoute.getWayPoints().toArray();\n      // Note: This check is preventing the second route update \n      // if location point was updated by MapContainer component\n      const shouldUpdateRoute = \n        locations.length !== wayPointsArray.length ||\n        diffPoints(locations, wayPointsArray) !== null;\n     */\n    this.updateRoute(locations);\n\n    if (locations.length > prevProps.locations.length) {\n      // Set map center if a new point was added when route is done updating\n      this.initialRoute.model.events.once('requestsuccess', () => {\n        const wayPoints = this.initialRoute.getWayPoints();\n        const lastWayPoint = wayPoints.get(wayPoints.getLength() - 1);\n\n        this.updateMapCenter(lastWayPoint.geometry.getCoordinates());\n      });\n    }\n  }\n\n  updateMapCenter(coords) {\n    this.map.setCenter(coords, mapDefaults.zoom, {\n      duration: 500,\n    });\n  }\n\n  updateRoute(locations) {\n    const addressList = locations.map((location) => (\n      // Build route by coords if specified, otherwise fallback to address\n      location.coords.length !== 0 ? location.coords : location.value\n    ));\n    this.initialRoute.model.setReferencePoints(addressList);\n  }\n\n  handleRouteRequestSuccess(ymaps, e) {\n    const wayPoints = this.initialRoute.getWayPoints().toArray();\n    const { locations } = this.props;\n\n    let diff;\n\n    // Note: diffPoints is an expensive operation, ensure we need it\n    // if lengths are not equal then route was definitely updated through\n    // add or delete methods hence it was not a map interaction.\n    if (wayPoints.length === locations.length) { \n      diff = diffPoints(this.props.locations, wayPoints.slice(0));\n    }\n\n    /* Debug */\n      console.group('Route request success');\n      console.count('Route updated (times)');\n      console.log('Is first route request: ' + e.get('init'));\n      console.log(wayPoints);\n      console.log(diff);\n      console.groupEnd('Route request success');\n    /* #Debug */\n\n    // RouteSuccess event was fired because of the user interaction with map\n    // (i.e. way points drag&drop discovered) - requires App.state.locations\n    // update for synching\n    if (diff) {\n      const { onWayPointDrag: updateLocationPoint } = this.props;\n      updateLocationPoint(diff.index, { coords: diff.coords });\n    }\n\n    /**\n     * Note: This eliminates the neccessity of creating own balloon yout,\n     * but I didn't find a way to attach this addon directly to route, so\n     * I wouldn't have to handle this manually each time wayPoints \n     * get updated.\n     * @see https://tech.yandex.ru/maps/doc/jsapi/2.1/ref/reference/geoObject.addon.balloon-docpage/ \n     */\n    // Add Yandex Balloon for every wayPoint when points get updated\n    wayPoints.forEach((wayPoint) => {\n      ymaps.geoObject.addon.balloon.get(wayPoint);\n    });\n  }\n\n  handleLoad(ymaps) {\n    this.ymaps = ymaps;\n    const { locations } = this.props;\n\n    this.initialRoute = new ymaps.multiRouter.MultiRoute({\n      referencePoints: locations.map((loc) => loc.value),\n      params: {\n        // Limit routes number to 1, otherwise additional routes are shown\n        results: 1,\n        // reverseGeocoding: true,\n      }\n    },  routeOptions(ymaps));\n\n    this.initialRoute.model.events.add('requestsuccess', (event) => {\n      this.handleRouteRequestSuccess(ymaps, event);\n    });\n\n\n    this.setState({ loaded: true });\n    this.map.geoObjects.add(this.initialRoute);\n  }\n\n  render() {\n    const { className = '' } = this.props;\n    const loadingModifier =\n      (this.state.loaded ? '' : 'MapContainer_status_loading');\n\n    return (\n      <div\n        className={`\n          MapContainer\n          App-MapContainer\n          ${className}\n          ${loadingModifier}\n          MapContainer_size_fluid\n          MapContainer_max-size_md\n        `}\n      >\n        <Map\n          className=\"Map\"\n          modules={modules}  \n          defaultState={mapDefaults}\n          onLoad={this.handleLoad}\n          instanceRef={ref => (this.map = ref)}\n        >\n        </Map>\n      </div>\n    );\n  }\n}\n","/**\n * Compare 2 points and check whether they match each other, i.e. they have\n * equal coordinates. If coordinates aren't specified for location point,\n * comparison is performed by location point's `address`.\n * \n * @param {import(\"../LocationPoint/LocationPoint\").LocationPoint} locPoint \n * @param {GeoObject} wayPoint\n * \n * @see https://clck.ru/EapUj\n * \n * @returns {boolean} true if the points match each other, otherwise false\n */\nfunction comparePoints(locPoint, wayPoint) {\n  // Compare loc and way point's coords if defined or fallback to\n  // address, if those match - return wayPoint index  \n  if (locPoint.coords.length !== 0) {\n    const wayPointCoords = wayPoint.geometry.getCoordinates();\n    return (\n      locPoint.coords[0] === wayPointCoords[0] &&\n      locPoint.coords[1] === wayPointCoords[1]\n    );\n  }\n\n  return locPoint.value === wayPoint.properties.get('request');\n}\n\n/**\n * Compare locationsPoints and wayPoints. If any locPoint does not\n * match a wayPoint, return an object representing locPoint `index` in locations array, and wayPoint `coords`, `address` and `request`.\n * \n * **Note**: `address` property will be avaliable only if \n * the `reverseGeocoding` option for multiRouter is set to true, otherwise it's\n * undefined.\n * \n * **Note**: `request` is either a requesting address or requesting coordinates.\n * \n * **Note**: Way point's `address` and `request` properties most of the time do not match because address is formatted by Yandex.\n * \n * @param {Array} locationPoints \n * @param {Array} routeWayPoints\n * \n * @returns {Object}\n */\nexport function diffPoints(locationPoints, routeWayPoints) {\n  const wayPoints = routeWayPoints.slice(0);\n\n  for (let i = 0; i < locationPoints.length; i++) {\n    const locPoint = locationPoints[i];\n    \n    const wayPointHasMatchIndex = wayPoints.findIndex((wayPoint) => \n      comparePoints(locPoint, wayPoint),\n    );\n    \n    // Way point has no matching location point\n    // locationPoints length may be greater/lesser than wayPoints (if func was\n    // called after a new location point was added/removed)\n    if (wayPointHasMatchIndex === -1 && wayPoints.length !== 0) {\n      const point = wayPoints[0];\n      const newCoords = point.geometry.getCoordinates();\n      // Return a diff object to update a location point at the specified \n      // index with new coordinates\n      return {\n        index: i,\n        coords: newCoords,\n        address: point.properties.get('address'),\n        request: point.properties.get('request'),\n      };\n    } else {\n      // Not perform extra steps\n      if (wayPoints.length === 0) break;\n\n      // Remove a wayPoint that wasn't changed {it has a pair \n      // in location points array)\n      wayPoints.splice(wayPointHasMatchIndex, 1);\n    }\n  }\n\n  return null;\n}\n","import './PointInput.css';\n\nimport React, { Component } from 'react';\n\nexport default class PointInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit(e) {\n    const { value } = this.state;\n    this.props.onSubmit(value);\n    this.setState({ value: '' });\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"App-Form\" onSubmit={this.handleSubmit}>\n        <input className=\"PointInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Введите адрес...\" />\n      </form>\n    );\n  }\n}\n","import './PointList.css';\n\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// PointList component is built with react-beautiful-dnd\n// @see https://github.com/atlassian/react-beautiful-dnd\nexport class PointList extends React.Component {\n  render() {\n    const { locations, onDelete } = this.props;\n    // Props provided from Draggable\n    const { provided, innerRef} = this.props;\n    const { droppableProps } = (provided || {});\n\n    const items = this.props.children ||\n      locations.map((location) => (\n        <PointListItem\n          location={location}\n          onDelete={onDelete}\n          key={location.id}\n        />\n      ));\n\n    return (\n      <ul\n        className=\"PointList App-PointList\"\n        ref={innerRef}\n        { ...droppableProps }\n      >\n        {items}\n      </ul>\n    );\n  }\n}\n\nexport function DraggablePointList(props) {\n  const { onDragEnd, ...rest } = props;\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const sourceIndex = result.source.index;\n    const destIndex = result.destination.index;\n\n    onDragEnd(sourceIndex, destIndex);\n  };\n  \n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"PointList-1\">\n        {provided => (\n          <PointList\n            provided={provided}\n            innerRef={provided.innerRef}\n          >\n            {rest.locations.map((location, index) => (\n              <DraggablePointListItem\n                // Draggable props\n                id={location.id}\n                index={index}\n\n                location={location}\n                onDelete={rest.onDelete}\n                key={location.id}\n              />\n            ))}\n            {provided.placeholder}\n          </PointList>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport class PointListItem extends React.Component {\n  render() {\n    const { location, onDelete } = this.props;\n    const { provided, innerRef } = this.props;\n    \n    const { draggableProps, dragHandleProps } = (provided || {});\n\n    return (\n      <li\n        className=\"PointList-Item Item\" \n        {...draggableProps}\n        ref={innerRef}\n      >\n        <div\n          className=\"Item-Icon\" \n          {...dragHandleProps}\n        ></div>\n        <div className=\"Item-Location\">{location.value}</div>\n        <button\n          className=\"Item-Button Item-Button_action_remove\"\n          onClick={() => onDelete(location.id)}\n        ></button>\n      </li>\n    );\n  }\n}\n\nfunction DraggablePointListItem(props) {\n    const { id, index, ...rest } = props;\n\n    return (\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <PointListItem provided={provided} placeholder={provided.placeholder} innerRef={provided.innerRef} {...rest} />\n        )}\n      </Draggable>\n    );\n}\n","import './ScreenToggler.css';\n\nimport React from 'react';\n\nexport class ScreenToggler extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: ''\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const { initialLabel: label } = this.props;\n\n    this.setState((state) => ({ label }));\n  }\n\n  handleToggle() {\n    const { onToggle, initialLabel, toggledLabel } = this.props;\n\n    this.setState((state) => ({\n      label: state.label === initialLabel ? toggledLabel : initialLabel,\n    }));\n\n    onToggle();\n  }\n  \n  render() {\n    const { label } = this.state;\n\n    return (\n      <button \n        className=\"ScreenToggler App-ScreenToggler\" \n        onClick={this.handleToggle}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n","/**\n * @typedef {Object} LocationPoint\n * @property {number} id - unique id (may be used as a key)\n * @property {string} value - Human readable address of the point\n */\n\n\n/**\n * Cretes a factory for creating LocationPoints with automatic id increment.\n * \n * @param {number} initialId - start incrementing id from\n * @returns {function}\n */\nexport const makeLocationPointFactory = ((initialId = 0) => {\n  let id = initialId;\n\n  /**\n   * LocationPoint object (plain object) with the provided address,\n   * and calculated id.\n   * \n   * @param {string} address\n   * @param {arrray} coords\n   * @returns {LocationPoint}\n   */\n  return function createLocationPoint(address, coords = []) {\n    if (address === undefined) {\n      throw new Error('MisiingArgument: Expected to get an address arg, but undefined encountered');\n    }\n\n    const locationPoint = {\n      id,\n      coords,\n      value: address,\n    };\n\n    id = id + 1;\n\n    return locationPoint;\n  };\n});\n\n/**\n * Create a LocationPoint with a provided address and add it to a copy of\n * locations array. The method does not mutate the data.\n *\n * @param {Array.<LocationPoint>} locations\n * @param {LocationPoint} loactionPoint\n * @returns {Array.<LocationPoint>} Returns new array containing created point\n */\nexport function addLocationPoint(locations, locationPoint) {\n  if (locationPoint.value === undefined || locationPoint.id === undefined) {\n    throw new Error('InvalidArgument: provided object does not match the location point signature');\n  }\n\n  return locations.concat([locationPoint]);\n};\n\n/**\n * Returns a new array without the LocationPoint with a provided id. \n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations\n * @param {number} id - unique id of the point that should be deleted\n * @returns {Array.<LocationPoint>} new locations array\n */\nexport function deleteLocationPoint(locations, id) {\n  if (id === undefined) {\n    throw new Error('MissingArgument: Expected to get a point id as the second argument, but undefined encountered');\n  }\n\n  return locations.filter((location) => {\n    return location.id !== id;\n  });\n}\n\n/**\n * Returns a new locations array with a moved LocationPoint from fromPosition\n * to toPosition. Method extracts the point and latter inserts it so other\n * points in range [fromPosition..toPosiition] got shifted. \n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations\n * @param {number} fromPosition\n * @param {number} toPosition\n * @returns {Array.<LocationPoint>}\n */\nexport function moveLocationPoint(locations, fromPosition, toPosition) {\n  \n  if (fromPosition < 0 || fromPosition >= locations.length) {\n    throw new Error('RangeError: Trying to access the fromPosition being out of the locations array range');\n  }\n\n  if (toPosition < 0 || toPosition >= locations.length) {\n    throw new Error('RangeError: Trying to access the toPosition being out of the locations array range');\n  }\n\n  const locs = locations.slice(0);\n  const extractedPoint = locs.splice(fromPosition, 1)[0];\n  locs.splice(toPosition, 0, extractedPoint);\n  return locs;\n}\n\n/**\n * \n * @typedef {Object} Update \n * @property {Array.<number>?} coords - two-items array of point coordinates\n * @property {string?} value - text address of the point\n */\n\n/**\n * Returns a new array with the LocationPoint at the specified index being \n * updated with the address value. If update object is null, the method will\n * reassign the element at a given index, without changing an actual values \n * (only the item reference will be changed).\n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations \n * @param {number} index\n * @param {Update|null} update\n * \n * @returns {Array.<LocationPoint>}\n */\nexport function updateLocationPoint(locations, index, update) {\n  if (index < 0 || index >= locations.length) {\n    throw new Error(`RangeError: Trying to access element being out of the locations array range`);\n  }\n\n  if (typeof update !== 'object') {\n    throw new Error('SignatureError: Expected to get the second argument as an object');\n  }\n\n  if (update && (!Array.isArray(update.coords) && !update.value)) {\n    throw new Error('ArgumentSignatureError: Expected to get the second update arg with either address or coordinates or both, but no defined property encountered')\n  }\n  const locs = locations.slice(0);\n  \n  locs[index] = Object.assign({}, locs[index], update);\n\n  return locs;\n}\n","import './App.css';\n\nimport React, { Component } from 'react';\nimport { withYMaps } from 'react-yandex-maps';\nimport MapContainer from './Components/MapContainer/MapContainer.js';\nimport PointInput from './Components/PointInput/PointInput.js';\nimport { DraggablePointList } from './Components/PointList/PointList.js';\nimport { ScreenToggler } from './Components/ScreenToggler/ScreenToggler.js';\n\nimport {\n  addLocationPoint,\n  deleteLocationPoint,\n  moveLocationPoint,\n  updateLocationPoint,\n  makeLocationPointFactory,\n} from './LocationPoint/LocationPoint.js';\nimport { notEmptyArray } from './Utils/Array.js'\n\nexport const viewList = ['App-PointList', 'App-MapContainer'];\nconst shouldBeHidden = (view, activeView) => (\n  view !== activeView ? 'is-hidden' : ''\n);\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      locations: [],\n      activeView: viewList[0],\n    };\n\n    this.createLocationPoint = makeLocationPointFactory();\n\n    this.toggleView = this.toggleView.bind(this);\n    this.addLocationPoint = this.addLocationPoint.bind(this);\n    this.deleteLocationPoint = this.deleteLocationPoint.bind(this);\n    this.moveLocationPoint = this.moveLocationPoint.bind(this);\n    this.updateLocationPoint = this.updateLocationPoint.bind(this);\n  }\n\n  fetch(requestValue) {\n    const { geocode } = this.props.ymaps;\n    return geocode(requestValue, { results: 1 });\n  }\n\n  fetchPointCoords(address) {\n    return this.fetch(address).then(response => \n      response.geoObjects.get(0).geometry.getCoordinates()\n    );\n  }\n\n  fetchPointAddress(coordinates) {\n    return this.fetch(coordinates).then(response => \n      response.geoObjects.get(0).getAddressLine()\n    );\n  }\n\n  toggleView() {\n    const nextView = (view) => (\n      view === viewList[0] ? viewList[1] : viewList[0]\n    );\n\n    this.setState((state) => ({\n      activeView: nextView(state.activeView),\n    }));\n  }\n\n  async addLocationPoint(value) {\n    const coords = await this.fetchPointCoords(value);\n    const locationPoint = this.createLocationPoint(value, coords);\n\n    const updateState = (state) => ({\n      locations: addLocationPoint(state.locations, locationPoint),\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        this.setState(updateState, () => {\n          resolve(locationPoint);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  deleteLocationPoint(id) {\n    this.setState((state) => ({\n      locations: deleteLocationPoint(state.locations, id),\n    }));\n  }\n\n  moveLocationPoint(from, to) {\n    this.setState((state) => ({\n      locations: moveLocationPoint(state.locations, from, to),\n    }));\n  }\n\n  async updateLocationPoint(index, update) {\n    const updateState = (state) => ({\n      locations: updateLocationPoint(state.locations, index, update),\n    });\n\n    if (notEmptyArray(update.coords)) {\n      // Fetch a corresponding address\n      update.value = await this.fetchPointAddress(update.coords); \n    } else if (update.value) {\n      // Fetch a corresponding coordinates\n      update.coords = await this.fetchPointCoords(update.value);\n    }\n\n    // Return a new promise that will be resolved only after\n    // the state is updated\n    return new Promise((resolve, reject) => {\n      try {\n        this.setState(updateState, () => {\n          resolve(update);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  render() {\n    const { activeView } = this.state; \n\n    return (\n      <main className=\"App\">\n        <div className=\"\n          App-InnerContainer\n          App-InnerContainer_row\n          App-InnerContainer_fluid\n        \">\n          <div className={`\n            App-Dashboard\n            ${shouldBeHidden(viewList[0], activeView)}\n          `}>\n            <PointInput onSubmit={this.addLocationPoint} />\n            <DraggablePointList\n              onDragEnd={this.moveLocationPoint}\n              onDelete={this.deleteLocationPoint}\n              locations={this.state.locations} />\n          </div>\n          <MapContainer\n            className={shouldBeHidden(viewList[1], activeView)}\n            locations={this.state.locations}\n            onWayPointDrag={this.updateLocationPoint} \n          />     \n        </div>\n        <ScreenToggler\n          onToggle={this.toggleView}\n          initialLabel=\"Показать карту\"\n          toggledLabel=\"Показать список точек\"\n        />\n      </main>\n    );\n  }\n}\n\nexport default withYMaps(App, true, ['geocode']);\n","/**\n * Check wether a given arg is not an empty array. \n * Returns false if the arg is not an array or \n * if the arg is an array, but it's not empty.\n *\n *  @param {*} test - possibly array and possibly empty\n * @returns {boolean}\n */\nexport function notEmptyArray(test) {\n  return Array.isArray(test) && test.length !== 0;\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { YMaps } from \"react-yandex-maps\";\nimport App from './App.js';\n\nconst apikey = '262287d2-a40d-4b35-b808-7d4231cb5915';\n\nReactDOM.render(\n  <YMaps query={{ apikey }}>\n    <App />\n  </YMaps>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}