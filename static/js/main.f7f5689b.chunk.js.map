{"version":3,"sources":["Components/MapContainer/MapContainer.js","Components/PointInput/PointInput.js","Components/PointList/PointList.js","Components/ScreenToggler/ScreenToggler.js","LocationPoint/LocationPoint.js","App.js","index.js"],"names":["YandexMap","displayName","Placemark","Polyline","modules","mapDefaults","center","zoom","MapContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ymaps","state","loaded","handleLoad","bind","assertThisInitialized","onBoundsChange","map","events","add","e","get","setState","locationPoint","index","onPlacemarkDragEnd","react_default","a","createElement","react_yandex_maps_umd_production_min","onDragend","coords","geometry","getCoordinates","properties","balloonContentBody","value","options","preset","iconColor","draggable","key","id","_this2","_this$props","locations","_this$props$className","className","loadingModifier","concat","defaultState","onLoad","instanceRef","ref","location","i","getPlacemark","loc","strokeColor","strokeWidth","Component","PointInput","handleChange","handleSubmit","target","onSubmit","preventDefault","type","onChange","placeholder","PointList","_React$Component","apply","arguments","inherits","createClass","onDelete","_this$props2","provided","innerRef","droppableProps","items","children","PointList_PointListItem","assign","React","DraggablePointList","onDragEnd","rest","objectWithoutProperties","react_beautiful_dnd_esm","result","destination","sourceIndex","source","destIndex","droppableId","PointList_PointList_PointList","DraggablePointListItem","PointListItem","_React$Component2","_this$props3","_this$props4","_ref2","draggableProps","dragHandleProps","onClick","draggableId","ScreenToggler","label","handleToggle","initialLabel","onToggle","toggledLabel","makeLocationPointFactory","length","undefined","address","Error","addLocationPoint","updateLocationPoint","update","Array","isArray","locs","slice","viewList","shouldBeHidden","view","activeView","App","_Component","mapCenter","createLocationPoint","toggleView","deleteLocationPoint","moveLocationPoint","requestValue","geocode","results","fetch","then","response","geoObjects","coordinates","getAddressLine","_addLocationPoint2","asyncToGenerator","regenerator_default","mark","_callee","updateState","wrap","_context","prev","next","abrupt","Promise","resolve","reject","stop","_x","filter","from","to","fromPosition","toPosition","extractedPoint","splice","_updateLocationPoint2","_callee2","_this3","_context2","_x2","_x3","_this4","PointInput_PointInput_PointInput","MapContainer_MapContainer_MapContainer","ScreenToggler_ScreenToggler_ScreenToggler","withYMaps","ReactDOM","render","query","apikey","src_App_0","document","getElementById"],"mappings":"wPAKAA,MAAUC,YAAc,MACxBC,YAAUD,YAAc,YACxBE,WAASF,YAAc,WAEvB,IAAMG,EAAU,CACd,UACA,2BAGIC,EAAc,CAAEC,OAAQ,CAAC,MAAO,OAAQC,KAAM,IAE/BC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,KAEbP,EAAKQ,MAAQ,CACXC,QAAQ,GAGVT,EAAKU,WAAaV,EAAKU,WAAWC,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KATDA,mFAajBG,KAAKJ,MAAMc,eAAelB,EAAYC,2CAG7BW,GAAO,IACRM,EAAmBV,KAAKJ,MAAxBc,eAERV,KAAKW,IAAIC,OAAOC,IAAI,eAAgB,SAACC,GACnCJ,EAAeI,EAAEC,IAAI,gBAGvBf,KAAKgB,SAAS,CAAEV,QAAQ,yCAGbW,EAAeC,GAAO,IACzBC,EAAuBnB,KAAKJ,MAA5BuB,mBAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEC,UAAW,SAACV,GACV,IAAMW,EAASX,EAAEC,IAAI,UAAUW,SAASC,iBACxCR,EAAmBD,EAAO,CAAEO,YAE9BG,WAAY,CACVC,mBAAoBZ,EAAca,OAEpCC,QAAS,CACPC,OAAQ,wBACRC,UAAW,UACXC,WAAW,GAEbC,IAAKlB,EAAcmB,GACnBV,SAAUT,EAAcQ,0CAKrB,IAAAY,EAAArC,KAAAsC,EAC+BtC,KAAKJ,MAAnC2C,EADDD,EACCC,UADDC,EAAAF,EACYG,iBADZ,IAAAD,EACwB,GADxBA,EAEDE,EACH1C,KAAKK,MAAMC,OAAS,GAAK,8BAE5B,OACEc,EAAAC,EAAAC,cAAA,OACEmB,UAAS,mEAAAE,OAGLF,EAHK,gBAAAE,OAILD,EAJK,sFASTtB,EAAAC,EAAAC,cAACC,EAAA,IAAD,CACEkB,UAAU,MACVlD,QAASA,EACTqD,aAAcpD,EACdqD,OAAQ7C,KAAKO,WACbuC,YAAa,SAAAC,GAAG,OAAKV,EAAK1B,IAAMoC,IAEhCR,EAAU5B,IAAI,SAACqC,EAAUC,GAAX,OAAiBZ,EAAKa,aAAaF,EAAUC,KAC7D7B,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACEG,SAAUa,EAAU5B,IAAI,SAAAwC,GAAG,OAAIA,EAAI1B,SACnCM,QAAS,CACPqB,YAAa,UACbC,YAAa,cA9EiBC,aCZrBC,qBACnB,SAAAA,EAAY3D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACjB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KAEDS,MAAQ,CACXyB,MAAO,IAGTjC,EAAK2D,aAAe3D,EAAK2D,aAAahD,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACpBA,EAAK4D,aAAe5D,EAAK4D,aAAajD,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KARHA,4EAWNiB,GACXd,KAAKgB,SAAS,CAAEc,MAAOhB,EAAE4C,OAAO5B,6CAGrBhB,GAAG,IACNgB,EAAU9B,KAAKK,MAAfyB,MACR9B,KAAKJ,MAAM+D,SAAS7B,GACpB9B,KAAKgB,SAAS,CAAEc,MAAO,KACvBhB,EAAE8C,kDAIF,OACExC,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,WAAWkB,SAAU3D,KAAKyD,cACxCrC,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,aAAaoB,KAAK,OAAO/B,MAAO9B,KAAKK,MAAMyB,MAAOgC,SAAU9D,KAAKwD,aAAcO,YAAY,yFA1B5ET,sCCG3BU,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAlE,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,GAAAlE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAAE,MAAAlE,KAAAmE,YAAA,OAAArE,OAAAsE,EAAA,EAAAtE,CAAAkE,EAAAC,GAAAnE,OAAAuE,EAAA,EAAAvE,CAAAkE,EAAA,EAAA7B,IAAA,SAAAL,MAAA,WACW,IAAAQ,EACyBtC,KAAKJ,MAA7B2C,EADDD,EACCC,UAAW+B,EADZhC,EACYgC,SADZC,EAGuBvE,KAAKJ,MAA3B4E,EAHDD,EAGCC,SAAUC,EAHXF,EAGWE,SACVC,GAAoBF,GAAY,IAAhCE,eAEFC,EAAQ3E,KAAKJ,MAAMgF,UACvBrC,EAAU5B,IAAI,SAACqC,GAAD,OACZ5B,EAAAC,EAAAC,cAACuD,EAAD,CACE7B,SAAUA,EACVsB,SAAUA,EACVnC,IAAKa,EAASZ,OAIpB,OACEhB,EAAAC,EAAAC,cAAA,KAAAxB,OAAAgF,OAAA,CACErC,UAAU,0BACVM,IAAK0B,GACAC,GAEJC,OAtBTX,EAAA,CAA+Be,IAAMzB,WA4B9B,SAAS0B,EAAmBpF,GAAO,IAChCqF,EAAuBrF,EAAvBqF,UAAcC,EADkBpF,OAAAqF,EAAA,EAAArF,CACTF,EADS,eAcxC,OACEwB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAiBH,UAZG,SAACI,GACrB,GAAKA,EAAOC,YAAZ,CAIA,IAAMC,EAAcF,EAAOG,OAAOtE,MAC5BuE,EAAYJ,EAAOC,YAAYpE,MAErC+D,EAAUM,EAAaE,MAKrBrE,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAWM,YAAY,eACpB,SAAAlB,GAAQ,OACPpD,EAAAC,EAAAC,cAACqE,EAAD,CACEnB,SAAUA,EACVC,SAAUD,EAASC,UAElBS,EAAK3C,UAAU5B,IAAI,SAACqC,EAAU9B,GAAX,OAClBE,EAAAC,EAAAC,cAACsE,EAAD,CAEExD,GAAIY,EAASZ,GACblB,MAAOA,EAEP8B,SAAUA,EACVsB,SAAUY,EAAKZ,SACfnC,IAAKa,EAASZ,OAGjBoC,EAAST,gBAQf,IAAM8B,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA/F,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,GAAA/F,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA3B,MAAAlE,KAAAmE,YAAA,OAAArE,OAAAsE,EAAA,EAAAtE,CAAA+F,EAAAC,GAAAhG,OAAAuE,EAAA,EAAAvE,CAAA+F,EAAA,EAAA1D,IAAA,SAAAL,MAAA,WACW,IAAAiE,EACwB/F,KAAKJ,MAA5BoD,EADD+C,EACC/C,SAAUsB,EADXyB,EACWzB,SADX0B,EAEwBhG,KAAKJ,MAA5B4E,EAFDwB,EAECxB,SAAUC,EAFXuB,EAEWvB,SAFXwB,EAIsCzB,GAAY,GAAjD0B,EAJDD,EAICC,eAAgBC,EAJjBF,EAIiBE,gBAExB,OACE/E,EAAAC,EAAAC,cAAA,KAAAxB,OAAAgF,OAAA,CACErC,UAAU,uBACNyD,EAFN,CAGEnD,IAAK0B,IAELrD,EAAAC,EAAAC,cAAA,MAAAxB,OAAAgF,OAAA,CACErC,UAAU,aACN0D,IAEN/E,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,iBAAiBO,EAASlB,OACzCV,EAAAC,EAAAC,cAAA,UACEmB,UAAU,wCACV2D,QAAS,kBAAM9B,EAAStB,EAASZ,YApB3CyD,EAAA,CAAmCd,IAAMzB,WA2BzC,SAASsC,EAAuBhG,GAAO,IAC3BwC,EAAuBxC,EAAvBwC,GAAIlB,EAAmBtB,EAAnBsB,MAAUgE,EADapF,OAAAqF,EAAA,EAAArF,CACJF,EADI,gBAGnC,OACEwB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAWiB,YAAajE,EAAIlB,MAAOA,GAChC,SAACsD,GAAD,OACCpD,EAAAC,EAAAC,cAACuD,EAAD/E,OAAAgF,OAAA,CAAeN,SAAUA,EAAUT,YAAaS,EAAST,YAAaU,SAAUD,EAASC,UAAcS,iBCzGpGoB,EAAb,SAAArC,GACE,SAAAqC,EAAY1G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsG,IACjBzG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwG,GAAAnG,KAAAH,KAAMJ,KAEDS,MAAQ,CACXkG,MAAO,IAGT1G,EAAK2G,aAAe3G,EAAK2G,aAAahG,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAPHA,EADrB,OAAAC,OAAAsE,EAAA,EAAAtE,CAAAwG,EAAArC,GAAAnE,OAAAuE,EAAA,EAAAvE,CAAAwG,EAAA,EAAAnE,IAAA,oBAAAL,MAAA,WAWsB,IACIyE,EAAUvG,KAAKJ,MAA7B6G,aAERzG,KAAKgB,SAAS,SAACX,GAAD,MAAY,CAAEkG,aAdhC,CAAApE,IAAA,eAAAL,MAAA,WAiBiB,IAAAQ,EACoCtC,KAAKJ,MAA9C8G,EADKpE,EACLoE,SAAUD,EADLnE,EACKmE,aAAcE,EADnBrE,EACmBqE,aAEhC3G,KAAKgB,SAAS,SAACX,GAAD,MAAY,CACxBkG,MAAOlG,EAAMkG,QAAUE,EAAeE,EAAeF,KAGvDC,MAxBJ,CAAAvE,IAAA,SAAAL,MAAA,WA2BW,IACCyE,EAAUvG,KAAKK,MAAfkG,MAER,OACEnF,EAAAC,EAAAC,cAAA,UACEmB,UAAU,kCACV2D,QAASpG,KAAKwG,cAEbD,OAnCTD,EAAA,CAAmCvB,IAAMzB,WCS5BsD,EAA4B,WAAmB,IACtDxE,EADsD+B,UAAA0C,OAAA,QAAAC,IAAA3C,UAAA,GAAAA,UAAA,GAAN,EAWpD,OAAO,SAA6B4C,GAAsB,IAAbtF,EAAa0C,UAAA0C,OAAA,QAAAC,IAAA3C,UAAA,GAAAA,UAAA,GAAJ,GACpD,QAAgB2C,IAAZC,EACF,MAAM,IAAIC,MAAM,8EAGlB,IAAM/F,EAAgB,CACpBmB,KACAX,SACAK,MAAOiF,GAKT,OAFA3E,GAAU,EAEHnB,IAYJ,SAASgG,EAAiB1E,EAAWtB,GAC1C,QAA4B6F,IAAxB7F,EAAca,YAA4CgF,IAArB7F,EAAcmB,GACrD,MAAM,IAAI4E,MAAM,gFAGlB,OAAOzE,EAAUI,OAAO,CAAC1B,IAuEpB,SAASiG,EAAoB3E,EAAWrB,EAAOiG,GACpD,GAAIjG,EAAQ,GAAKA,GAASqB,EAAUsE,OAClC,MAAM,IAAIG,MAAJ,+EAGR,GAAsB,kBAAXG,EACT,MAAM,IAAIH,MAAM,oEAGlB,GAAIG,IAAYC,MAAMC,QAAQF,EAAO1F,UAAY0F,EAAOrF,MACtD,MAAM,IAAIkF,MAAM,iJAElB,IAAMM,EAAO/E,EAAUgF,MAAM,GAI7B,OAFAD,EAAKpG,GAASpB,OAAOgF,OAAO,GAAIwC,EAAKpG,GAAQiG,GAEtCG,EC3HF,IAAME,EAAW,CAAC,gBAAiB,oBACpCC,EAAiB,SAACC,EAAMC,GAAP,OACrBD,IAASC,EAAa,YAAc,IAGzBC,EAAb,SAAAC,GACE,SAAAD,EAAYhI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4H,IACjB/H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8H,GAAAzH,KAAAH,KAAMJ,KAEDS,MAAQ,CACXkC,UAAW,GACXoF,WAAYH,EAAS,IAGvB3H,EAAKiI,UAAY,GAEjBjI,EAAKkI,oBAAsBnB,IAE3B/G,EAAKmI,WAAanI,EAAKmI,WAAWxH,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAClBA,EAAKoH,iBAAmBpH,EAAKoH,iBAAiBzG,KAAtBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACxBA,EAAKoI,oBAAsBpI,EAAKoI,oBAAoBzH,KAAzBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC3BA,EAAKqI,kBAAoBrI,EAAKqI,kBAAkB1H,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAKqH,oBAAsBrH,EAAKqH,oBAAoB1G,KAAzBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAhBVA,EADrB,OAAAC,OAAAsE,EAAA,EAAAtE,CAAA8H,EAAAC,GAAA/H,OAAAuE,EAAA,EAAAvE,CAAA8H,EAAA,EAAAzF,IAAA,QAAAL,MAAA,SAoBQqG,GAEJ,OAAOC,EADapI,KAAKJ,MAAMQ,MAAvBgI,SACOD,EAAc,CAAEE,QAAS,MAtB5C,CAAAlG,IAAA,mBAAAL,MAAA,SAyBmBiF,GACf,OAAO/G,KAAKsI,MAAMvB,GAASwB,KAAK,SAAAC,GAAQ,OACtCA,EAASC,WAAW1H,IAAI,GAAGW,SAASC,qBA3B1C,CAAAQ,IAAA,oBAAAL,MAAA,SA+BoB4G,GAChB,OAAO1I,KAAKsI,MAAMI,GAAaH,KAAK,SAAAC,GAAQ,OAC1CA,EAASC,WAAW1H,IAAI,GAAG4H,qBAjCjC,CAAAxG,IAAA,aAAAL,MAAA,WA0CI9B,KAAKgB,SAAS,SAACX,GAAD,MAAY,CACxBsH,YALgBD,EAKKrH,EAAMsH,WAJ3BD,IAASF,EAAS,GAAKA,EAAS,GAAKA,EAAS,KAD/B,IAACE,MAtCtB,CAAAvF,IAAA,mBAAAL,MAAA,eAAA8G,EAAA9I,OAAA+I,EAAA,EAAA/I,CAAAgJ,EAAAzH,EAAA0H,KAAA,SAAAC,EA+CyBlH,GA/CzB,IAAAb,EAAAgI,EAAA5G,EAAArC,KAAA,OAAA8I,EAAAzH,EAAA6H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAiDUpI,EAAgBjB,KAAK+H,oBAAoBjG,EAAO9B,KAAK8H,WAErDmB,EAAc,SAAC5I,GAAD,MAAY,CAC9BkC,UAAW0E,EAAiB5G,EAAMkC,UAAWtB,KApDnDkI,EAAAG,OAAA,SAuDW,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IACEpH,EAAKrB,SAASiI,EAAa,WACzBO,EAAQvI,KAEV,MAAOH,GACP2I,EAAO3I,OA7Df,wBAAAqI,EAAAO,SAAAV,EAAAhJ,SAAA,gBAAA2J,GAAA,OAAAf,EAAA1E,MAAAlE,KAAAmE,YAAA,KAAAhC,IAAA,sBAAAL,MAAA,SAkEsBM,GAClBpC,KAAKgB,SAAS,SAACX,GAAD,MAAY,CACxBkC,UDzBC,SAA6BA,EAAWH,GAC7C,QAAW0E,IAAP1E,EACF,MAAM,IAAI4E,MAAM,iGAGlB,OAAOzE,EAAUqH,OAAO,SAAC5G,GACvB,OAAOA,EAASZ,KAAOA,ICmBV6F,CAAoB5H,EAAMkC,UAAWH,QApEtD,CAAAD,IAAA,oBAAAL,MAAA,SAwEoB+H,EAAMC,GACtB9J,KAAKgB,SAAS,SAACX,GAAD,MAAY,CACxBkC,UDTC,SAA2BA,EAAWwH,EAAcC,GAEzD,GAAID,EAAe,GAAKA,GAAgBxH,EAAUsE,OAChD,MAAM,IAAIG,MAAM,wFAGlB,GAAIgD,EAAa,GAAKA,GAAczH,EAAUsE,OAC5C,MAAM,IAAIG,MAAM,sFAGlB,IAAMM,EAAO/E,EAAUgF,MAAM,GACvB0C,EAAiB3C,EAAK4C,OAAOH,EAAc,GAAG,GAEpD,OADAzC,EAAK4C,OAAOF,EAAY,EAAGC,GACpB3C,ECJQY,CAAkB7H,EAAMkC,UAAWsH,EAAMC,QA1E1D,CAAA3H,IAAA,sBAAAL,MAAA,eAAAqI,EAAArK,OAAA+I,EAAA,EAAA/I,CAAAgJ,EAAAzH,EAAA0H,KAAA,SAAAqB,EA8E4BlJ,EAAOiG,GA9EnC,IAAA8B,EAAAoB,EAAArK,KAAA,OAAA8I,EAAAzH,EAAA6H,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cA+EUJ,EAAc,SAAC5I,GAAD,MAAY,CAC9BkC,UAAW2E,EAAoB7G,EAAMkC,UAAWrB,EAAOiG,KAhF7DmD,EAAAhB,OAAA,SAqFW,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IACEY,EAAKrJ,SAASiI,EAAa,WACzBO,EAAQrC,KAEV,MAAOrG,GACP2I,EAAO3I,OA3Ff,wBAAAwJ,EAAAZ,SAAAU,EAAApK,SAAA,gBAAAuK,EAAAC,GAAA,OAAAL,EAAAjG,MAAAlE,KAAAmE,YAAA,KAAAhC,IAAA,SAAAL,MAAA,WAgGW,IAAA2I,EAAAzK,KACC2H,EAAe3H,KAAKK,MAApBsH,WAER,OACEvG,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,OACdrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,wEAKbrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAS,4CAAAE,OAEV8E,EAAeD,EAAS,GAAIG,GAFlB,iBAIZvG,EAAAC,EAAAC,cAACoJ,EAAD,CAAY/G,SAAU3D,KAAKiH,mBAC3B7F,EAAAC,EAAAC,cAAC0D,EAAD,CACEC,UAAWjF,KAAKkI,kBAChB5D,SAAUtE,KAAKiI,oBACf1F,UAAWvC,KAAKK,MAAMkC,aAE1BnB,EAAAC,EAAAC,cAACqJ,EAAD,CACEjK,eAAgB,SAACe,GAAagJ,EAAK3C,UAAYrG,GAC/CgB,UAAWgF,EAAeD,EAAS,GAAIG,GACvCpF,UAAWvC,KAAKK,MAAMkC,UACtBpB,mBAAoBnB,KAAKkH,uBAG7B9F,EAAAC,EAAAC,cAACsJ,EAAD,CACElE,SAAU1G,KAAKgI,WACfvB,aAAa,kFACbE,aAAa,8HA9HvBiB,EAAA,CAAyBtE,aAqIVuH,sBAAUjD,GAAK,EAAM,CAAC,YClJrCkD,IAASC,OACP3J,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOyJ,MAAO,CAAEC,OAHH,yCAIX7J,EAAAC,EAAAC,cAAC4J,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.f7f5689b.chunk.js","sourcesContent":["import './MapContainer.css';\n\nimport React, { Component } from 'react';\nimport { Map as YandexMap, Placemark, Polyline } from 'react-yandex-maps';\n\nYandexMap.displayName = 'Map';\nPlacemark.displayName = 'Placemark';\nPolyline.displayName = 'Polyline';\n\nconst modules = [\n  'geocode',\n  'geoObject.addon.balloon',\n];\n\nconst mapDefaults = { center: [55.75, 37.57], zoom: 12 };\n\nexport default class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ymaps = null;\n\n    this.state = {\n      loaded: false,\n    };\n\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onBoundsChange(mapDefaults.center);\n  }\n\n  handleLoad(ymaps) {\n    const { onBoundsChange } = this.props;\n\n    this.map.events.add('boundschange', (e) => {\n      onBoundsChange(e.get('newCenter'));\n    });\n\n    this.setState({ loaded: true });\n  }\n\n  getPlacemark(locationPoint, index) {\n    const { onPlacemarkDragEnd } = this.props;\n  \n    return (\n      <Placemark\n        onDragend={(e) => {\n          const coords = e.get('target').geometry.getCoordinates();\n          onPlacemarkDragEnd(index, { coords });\n        }}\n        properties={{\n          balloonContentBody: locationPoint.value,\n        }}\n        options={{\n          preset: 'islands#circleDotIcon',\n          iconColor: '#FF270F',\n          draggable: true,\n        }}\n        key={locationPoint.id}\n        geometry={locationPoint.coords} \n      />\n    );\n  }\n\n  render() {\n    const { locations, className = '' } = this.props;\n    const loadingModifier =\n      (this.state.loaded ? '' : 'MapContainer_status_loading');\n\n    return (\n      <div\n        className={`\n          MapContainer\n          App-MapContainer\n          ${className}\n          ${loadingModifier}\n          MapContainer_size_fluid\n          MapContainer_max-size_md\n        `}\n      >\n        <YandexMap\n          className=\"Map\"\n          modules={modules}\n          defaultState={mapDefaults}\n          onLoad={this.handleLoad}\n          instanceRef={ref => (this.map = ref)}\n        >\n        { locations.map((location, i) => this.getPlacemark(location, i)) }\n        <Polyline\n          geometry={locations.map(loc => loc.coords)}\n          options={{\n            strokeColor: '#FF270F',\n            strokeWidth: 4,\n          }}\n        />\n        </YandexMap>\n      </div>\n    );\n  }\n}\n","import './PointInput.css';\n\nimport React, { Component } from 'react';\n\nexport default class PointInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit(e) {\n    const { value } = this.state;\n    this.props.onSubmit(value);\n    this.setState({ value: '' });\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"App-Form\" onSubmit={this.handleSubmit}>\n        <input className=\"PointInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Введите адрес...\" />\n      </form>\n    );\n  }\n}\n","import './PointList.css';\n\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// PointList component is built with react-beautiful-dnd\n// @see https://github.com/atlassian/react-beautiful-dnd\nexport class PointList extends React.Component {\n  render() {\n    const { locations, onDelete } = this.props;\n    // Props provided from Draggable\n    const { provided, innerRef} = this.props;\n    const { droppableProps } = (provided || {});\n\n    const items = this.props.children ||\n      locations.map((location) => (\n        <PointListItem\n          location={location}\n          onDelete={onDelete}\n          key={location.id}\n        />\n      ));\n\n    return (\n      <ul\n        className=\"PointList App-PointList\"\n        ref={innerRef}\n        { ...droppableProps }\n      >\n        {items}\n      </ul>\n    );\n  }\n}\n\nexport function DraggablePointList(props) {\n  const { onDragEnd, ...rest } = props;\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const sourceIndex = result.source.index;\n    const destIndex = result.destination.index;\n\n    onDragEnd(sourceIndex, destIndex);\n  };\n  \n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"PointList-1\">\n        {provided => (\n          <PointList\n            provided={provided}\n            innerRef={provided.innerRef}\n          >\n            {rest.locations.map((location, index) => (\n              <DraggablePointListItem\n                // Draggable props\n                id={location.id}\n                index={index}\n\n                location={location}\n                onDelete={rest.onDelete}\n                key={location.id}\n              />\n            ))}\n            {provided.placeholder}\n          </PointList>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport class PointListItem extends React.Component {\n  render() {\n    const { location, onDelete } = this.props;\n    const { provided, innerRef } = this.props;\n    \n    const { draggableProps, dragHandleProps } = (provided || {});\n\n    return (\n      <li\n        className=\"PointList-Item Item\" \n        {...draggableProps}\n        ref={innerRef}\n      >\n        <div\n          className=\"Item-Icon\" \n          {...dragHandleProps}\n        ></div>\n        <div className=\"Item-Location\">{location.value}</div>\n        <button\n          className=\"Item-Button Item-Button_action_remove\"\n          onClick={() => onDelete(location.id)}\n        ></button>\n      </li>\n    );\n  }\n}\n\nfunction DraggablePointListItem(props) {\n    const { id, index, ...rest } = props;\n\n    return (\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <PointListItem provided={provided} placeholder={provided.placeholder} innerRef={provided.innerRef} {...rest} />\n        )}\n      </Draggable>\n    );\n}\n","import './ScreenToggler.css';\n\nimport React from 'react';\n\nexport class ScreenToggler extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: ''\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const { initialLabel: label } = this.props;\n\n    this.setState((state) => ({ label }));\n  }\n\n  handleToggle() {\n    const { onToggle, initialLabel, toggledLabel } = this.props;\n\n    this.setState((state) => ({\n      label: state.label === initialLabel ? toggledLabel : initialLabel,\n    }));\n\n    onToggle();\n  }\n  \n  render() {\n    const { label } = this.state;\n\n    return (\n      <button \n        className=\"ScreenToggler App-ScreenToggler\" \n        onClick={this.handleToggle}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n","/**\n * @typedef {Object} LocationPoint\n * @property {number} id - unique id (may be used as a key)\n * @property {string} value - Human readable address of the point\n */\n\n\n/**\n * Cretes a factory for creating LocationPoints with automatic id increment.\n * \n * @param {number} initialId - start incrementing id from\n * @returns {function}\n */\nexport const makeLocationPointFactory = ((initialId = 0) => {\n  let id = initialId;\n\n  /**\n   * LocationPoint object (plain object) with the provided address,\n   * and calculated id.\n   * \n   * @param {string} address\n   * @param {arrray} coords\n   * @returns {LocationPoint}\n   */\n  return function createLocationPoint(address, coords = []) {\n    if (address === undefined) {\n      throw new Error('MisiingArgument: Expected to get an address arg, but undefined encountered');\n    }\n\n    const locationPoint = {\n      id,\n      coords,\n      value: address,\n    };\n\n    id = id + 1;\n\n    return locationPoint;\n  };\n});\n\n/**\n * Create a LocationPoint with a provided address and add it to a copy of\n * locations array. The method does not mutate the data.\n *\n * @param {Array.<LocationPoint>} locations\n * @param {LocationPoint} loactionPoint\n * @returns {Array.<LocationPoint>} Returns new array containing created point\n */\nexport function addLocationPoint(locations, locationPoint) {\n  if (locationPoint.value === undefined || locationPoint.id === undefined) {\n    throw new Error('InvalidArgument: provided object does not match the location point signature');\n  }\n\n  return locations.concat([locationPoint]);\n};\n\n/**\n * Returns a new array without the LocationPoint with a provided id. \n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations\n * @param {number} id - unique id of the point that should be deleted\n * @returns {Array.<LocationPoint>} new locations array\n */\nexport function deleteLocationPoint(locations, id) {\n  if (id === undefined) {\n    throw new Error('MissingArgument: Expected to get a point id as the second argument, but undefined encountered');\n  }\n\n  return locations.filter((location) => {\n    return location.id !== id;\n  });\n}\n\n/**\n * Returns a new locations array with a moved LocationPoint from fromPosition\n * to toPosition. Method extracts the point and latter inserts it so other\n * points in range [fromPosition..toPosiition] got shifted. \n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations\n * @param {number} fromPosition\n * @param {number} toPosition\n * @returns {Array.<LocationPoint>}\n */\nexport function moveLocationPoint(locations, fromPosition, toPosition) {\n  \n  if (fromPosition < 0 || fromPosition >= locations.length) {\n    throw new Error('RangeError: Trying to access the fromPosition being out of the locations array range');\n  }\n\n  if (toPosition < 0 || toPosition >= locations.length) {\n    throw new Error('RangeError: Trying to access the toPosition being out of the locations array range');\n  }\n\n  const locs = locations.slice(0);\n  const extractedPoint = locs.splice(fromPosition, 1)[0];\n  locs.splice(toPosition, 0, extractedPoint);\n  return locs;\n}\n\n/**\n * \n * @typedef {Object} Update \n * @property {Array.<number>?} coords - two-items array of point coordinates\n * @property {string?} value - text address of the point\n */\n\n/**\n * Returns a new array with the LocationPoint at the specified index being \n * updated with the address value. If update object is null, the method will\n * reassign the element at a given index, without changing an actual values \n * (only the item reference will be changed).\n * \n * The method does not mutate the provided args.\n * \n * @param {Array.<LocationPoint>} locations \n * @param {number} index\n * @param {Update|null} update\n * \n * @returns {Array.<LocationPoint>}\n */\nexport function updateLocationPoint(locations, index, update) {\n  if (index < 0 || index >= locations.length) {\n    throw new Error(`RangeError: Trying to access element being out of the locations array range`);\n  }\n\n  if (typeof update !== 'object') {\n    throw new Error('SignatureError: Expected to get the second argument as an object');\n  }\n\n  if (update && (!Array.isArray(update.coords) && !update.value)) {\n    throw new Error('ArgumentSignatureError: Expected to get the second update arg with either address or coordinates or both, but no defined property encountered')\n  }\n  const locs = locations.slice(0);\n  \n  locs[index] = Object.assign({}, locs[index], update);\n\n  return locs;\n}\n","import './App.css';\n\nimport React, { Component } from 'react';\nimport { withYMaps } from 'react-yandex-maps';\nimport MapContainer from './Components/MapContainer/MapContainer.js';\nimport PointInput from './Components/PointInput/PointInput.js';\nimport { DraggablePointList } from './Components/PointList/PointList.js';\nimport { ScreenToggler } from './Components/ScreenToggler/ScreenToggler.js';\n\nimport {\n  addLocationPoint,\n  deleteLocationPoint,\n  moveLocationPoint,\n  updateLocationPoint,\n  makeLocationPointFactory,\n} from './LocationPoint/LocationPoint.js';\nimport { notEmptyArray } from './Utils/Array.js'\n\nexport const viewList = ['App-PointList', 'App-MapContainer'];\nconst shouldBeHidden = (view, activeView) => (\n  view !== activeView ? 'is-hidden' : ''\n);\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      locations: [],\n      activeView: viewList[0],\n    };\n\n    this.mapCenter = [];\n\n    this.createLocationPoint = makeLocationPointFactory();\n\n    this.toggleView = this.toggleView.bind(this);\n    this.addLocationPoint = this.addLocationPoint.bind(this);\n    this.deleteLocationPoint = this.deleteLocationPoint.bind(this);\n    this.moveLocationPoint = this.moveLocationPoint.bind(this);\n    this.updateLocationPoint = this.updateLocationPoint.bind(this);\n  }\n\n  fetch(requestValue) {\n    const { geocode } = this.props.ymaps;\n    return geocode(requestValue, { results: 1 });\n  }\n\n  fetchPointCoords(address) {\n    return this.fetch(address).then(response => \n      response.geoObjects.get(0).geometry.getCoordinates()\n    );\n  }\n\n  fetchPointAddress(coordinates) {\n    return this.fetch(coordinates).then(response => \n      response.geoObjects.get(0).getAddressLine()\n    );\n  }\n\n  toggleView() {\n    const nextView = (view) => (\n      view === viewList[0] ? viewList[1] : viewList[0]\n    );\n\n    this.setState((state) => ({\n      activeView: nextView(state.activeView),\n    }));\n  }\n\n  async addLocationPoint(value) {\n    // const coords = await this.fetchPointCoords(value);\n    const locationPoint = this.createLocationPoint(value, this.mapCenter);\n\n    const updateState = (state) => ({\n      locations: addLocationPoint(state.locations, locationPoint),\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        this.setState(updateState, () => {\n          resolve(locationPoint);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  deleteLocationPoint(id) {\n    this.setState((state) => ({\n      locations: deleteLocationPoint(state.locations, id),\n    }));\n  }\n\n  moveLocationPoint(from, to) {\n    this.setState((state) => ({\n      locations: moveLocationPoint(state.locations, from, to),\n    }));\n  }\n\n  async updateLocationPoint(index, update) {\n    const updateState = (state) => ({\n      locations: updateLocationPoint(state.locations, index, update),\n    });\n\n    // Return a new promise that will be resolved only after\n    // the state is updated\n    return new Promise((resolve, reject) => {\n      try {\n        this.setState(updateState, () => {\n          resolve(update);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  render() {\n    const { activeView } = this.state; \n\n    return (\n      <main className=\"App\">\n        <div className=\"\n          App-InnerContainer\n          App-InnerContainer_row\n          App-InnerContainer_fluid\n        \">\n          <div className={`\n            App-Dashboard\n            ${shouldBeHidden(viewList[0], activeView)}\n          `}>\n            <PointInput onSubmit={this.addLocationPoint} />\n            <DraggablePointList\n              onDragEnd={this.moveLocationPoint}\n              onDelete={this.deleteLocationPoint}\n              locations={this.state.locations} />\n          </div>\n          <MapContainer\n            onBoundsChange={(coords) => { this.mapCenter = coords; }}\n            className={shouldBeHidden(viewList[1], activeView)}\n            locations={this.state.locations}\n            onPlacemarkDragEnd={this.updateLocationPoint} \n          />     \n        </div>\n        <ScreenToggler\n          onToggle={this.toggleView}\n          initialLabel=\"Показать карту\"\n          toggledLabel=\"Показать список точек\"\n        />\n      </main>\n    );\n  }\n}\n\nexport default withYMaps(App, true, ['geocode']);\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { YMaps } from \"react-yandex-maps\";\nimport App from './App.js';\n\nconst apikey = '262287d2-a40d-4b35-b808-7d4231cb5915';\n\nReactDOM.render(\n  <YMaps query={{ apikey }}>\n    <App />\n  </YMaps>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}